name: Build QORMLite for Windows
on: [pull_request]
jobs:
  build:
    runs-on: windows-latest
    env:
      BUILD_TARGET: release
      BUILD_DIR: build
      QORMLITE_VERSION: "3.0"
      
    steps:
      - name: Install Qt
        id: install
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ vars.QT_VERSION }}
          host: windows
          arch: win64_mingw
          tools: tools_mingw1310
          cache: true

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Compile and install
        shell: bash
        run: |
          echo "Qt directory : $QT_ROOT_DIR"
          echo "Path : $PATH"
          mkdir -p $BUILD_DIR
          cd $BUILD_DIR
          qmake ../QORMLiteParent.pro CONFIG+=$BUILD_TARGET
          mingw32-make -j$NUMBER_OF_PROCESSORS
          mingw32-make install

      - name: Run tests
        shell: bash
        run: |
          echo "Qt directory : $QT_ROOT_DIR"
          echo "Path : $PATH"
          export QT_ASSUME_STDERR_HAS_CONSOLE=1
          export QT_LOGGING_TO_CONSOLE=1
          cd $BUILD_DIR/test/$BUILD_TARGET
          cp $BUILD_DIR/lib/$BUILD_TARGET/${QORMLITE_VERSION}/*.dll .
          for test in *.exe; do
            echo "Running $test..."
            "./$test" -v2 2>&1 | tee "${test}.log"
            "$PWD/$test" 2>&1 | tee "${test}.log"
            status=${PIPESTATUS[0]}
            if [ $status -ne 0 ]; then
              echo "‚ùå Test $test failed with exit code $status"
              exit $status
            fi
          done

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: QORMLite-tests-logs
          path: ${{ env.BUILD_DIR }}/test/${{ env.BUILD_TARGET }}/*.log
          retention-days: 7

      - name: Upload library
        uses: actions/upload-artifact@v4
        with:
          name: QORMLite-library
          path: ${{ env.BUILD_DIR }}/lib/${{ env.BUILD_TARGET }}/${{ env.QORMLITE_VERSION }}/**
          retention-days: 7
      